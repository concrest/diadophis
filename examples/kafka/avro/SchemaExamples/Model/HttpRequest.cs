// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace SchemaExamples.Model
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class HttpRequest : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""HttpRequest"",""namespace"":""SchemaExamples.Model"",""fields"":[{""name"":""request_verb"",""doc"":""HTTP verb"",""default"":""Get"",""type"":{""type"":""enum"",""name"":""HttpVerbs"",""namespace"":""SchemaExamples.Model"",""symbols"":[""Get"",""Post"",""Put"",""Delete"",""Head"",""Options""]}},{""name"":""path"",""doc"":""The path to the resource"",""type"":""string""},{""name"":""user_agent"",""doc"":""The user agent that made the request"",""type"":""string""},{""name"":""timestamp"",""doc"":""UTC time the request was made"",""type"":""long"",""logicalType"":""timestamp-millis""},{""name"":""duration"",""doc"":""Millisecond duration for the completion of the request"",""type"":""double""}]}");
		/// <summary>
		/// HTTP verb
		/// </summary>
		private SchemaExamples.Model.HttpVerbs _request_verb;
		/// <summary>
		/// The path to the resource
		/// </summary>
		private string _path;
		/// <summary>
		/// The user agent that made the request
		/// </summary>
		private string _user_agent;
		/// <summary>
		/// UTC time the request was made
		/// </summary>
		private long _timestamp;
		/// <summary>
		/// Millisecond duration for the completion of the request
		/// </summary>
		private double _duration;
		public virtual Schema Schema
		{
			get
			{
				return HttpRequest._SCHEMA;
			}
		}
		/// <summary>
		/// HTTP verb
		/// </summary>
		public SchemaExamples.Model.HttpVerbs request_verb
		{
			get
			{
				return this._request_verb;
			}
			set
			{
				this._request_verb = value;
			}
		}
		/// <summary>
		/// The path to the resource
		/// </summary>
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				this._path = value;
			}
		}
		/// <summary>
		/// The user agent that made the request
		/// </summary>
		public string user_agent
		{
			get
			{
				return this._user_agent;
			}
			set
			{
				this._user_agent = value;
			}
		}
		/// <summary>
		/// UTC time the request was made
		/// </summary>
		public long timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				this._timestamp = value;
			}
		}
		/// <summary>
		/// Millisecond duration for the completion of the request
		/// </summary>
		public double duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				this._duration = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.request_verb;
			case 1: return this.path;
			case 2: return this.user_agent;
			case 3: return this.timestamp;
			case 4: return this.duration;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.request_verb = (SchemaExamples.Model.HttpVerbs)fieldValue; break;
			case 1: this.path = (System.String)fieldValue; break;
			case 2: this.user_agent = (System.String)fieldValue; break;
			case 3: this.timestamp = (System.Int64)fieldValue; break;
			case 4: this.duration = (System.Double)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
